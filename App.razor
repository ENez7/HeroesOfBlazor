<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <div class="container">
                        <div class="row">
                            <div class="col d-flex justify-content-center" style="height: 700px;">
                                <!-- Content Goes Here -->
                                <img src="/svg/403-Error.svg" style="max-width: 85%; max-height: 85%;" alt="Forbidden">
                            </div>
                        </div>
                    </div>
                    <div class="container d-flex flex-row-reverse">
                        <RadzenButton Click="@CreditsNotAuthorized">Worker illustrations by Storyset</RadzenButton>
                    </div>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="container">
                    <div class="row">
                        <div class="col d-flex justify-content-center" style="height: 700px;">
                            <!-- Content Goes Here -->
                            <img src="/svg/404-Error.svg" style="max-width: 85%; max-height: 85%;" alt="Not found">
                        </div>
                    </div>
                </div>
                <div class="container d-flex flex-row-reverse">
                    <RadzenButton Click="@CreditsNotFound">Web illustrations by Storyset</RadzenButton>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {

    [Inject]
    IJSRuntime? JsRuntime { get; set; }

    private async void CreditsNotFound()
    {
        await JsRuntime!.InvokeVoidAsync("open", "https://storyset.com/web", "_blank");
    }

    private async void CreditsNotAuthorized()
    {
        await JsRuntime!.InvokeVoidAsync("open", "https://storyset.com/worker", "_blank");
    }

}